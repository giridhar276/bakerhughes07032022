**Everything in python is object**
**Every object contains methods **

number
-------
number can be integer or decimal or octal or hexa.

val = 10
aval = 43.3


string
------
string can be defined in single or double or triple quotes.

aname = 'python programming'
bname = "java programming"
cname = """machine learning"""



list  ( array in C )
------
list contains set of elements.
Elements can set of numbers or strings or any combination.
list elements are defined in []


alist = [10,20,30,46,7]
blist = ["python","java","scala"]
clist = [43,6.34,"java"]



tuple    ( immutable or unchangable )
-------
tuple contains set of elements like the list.
Elements can set of numbers or strings or any combination.
tuple elements are defined in ().
**** Elements inside tuple cannot be modified directly*****


atup = (30,4.34,"oracle")


dictionary
-----------
dictionary contains elements in the form of keys and values.
dictionary elemnts are defined in {}.
*** Indexing is not allowed in dictionary ***

key is either number or string
value can be number or string or list or tuple or dictionary or set or any complex dictionary

syntax:     object = { key:value  , key:value , key:value ... }
example:    book   = {"chap1":10  ,"chap2":20  ,"chap3":30 }
             data  = {1:2,3:4,5:6}
           # dictionary of lists
           newbook = {"chap1":[10,"Rita","US"]  ,"chap2":[20,"Gita","UK"]  ,"chap3":[30,"Rao","Ind"] }


set
----
set is UNORDERED colletion of UNIQUE values of SAME type.

aset = {10,20,20,30,30}



mutable objects
-----------------
list
set
dictionary



immutable objects  ( unchangable or uneditable)
-------------------
string
tuple
number


functions | definitions | sumodule | block

- builin functions
- user defined functions

How to display all the list of builtin functions and exceptions ?
-----------------------------------------------------------

In the shell

dir(__builtins__)

builtin functions
------------------
print()
len()
range()
help()
dir()
input()
max()
min()
sum()
type()
isinstance()
chr()



typecasting functions ( converting from one object to another object )
--------------------------------
str()
int()
float()
oct()
hex()
list()
tuple()
dict()
set()






operators
-----------


arithmetic operators :  +   -  *  % /


assignment operators  ( ++ and -- are NOT allowed in python )
----------------------
val = 10

val+=1   or   val = val + 1
val-=1   or   val = val - 1


relational operators
----------------------
< <= > >= == !=

if len(name) > 10 :
   # logic


logical operators
--------------------
and
or
not

name = "python"
if len(name) == 6  and name.isupper():
     # if both the conditions are true then execute this

if len(name) == 6  or name.isupper():
    # if either of the expression is true ..then execute


special operators
--------------------
+ : joining operator
* : repetition operator

name = "python"
name * 4


file handling
--------------

- working with flat files  (  txt  csv conf prop  rtf log.... )


- working with third party files ( xlsx ppt pptx docx pdf zip rar .7z ... )



working with flat files
-----------------------


opening the file
-----------------
syntax:    object = open(filename,mode)
example:     fobj = open("customers.txt","r")  # read operation
             fobj = open("customers.txt","w")  # writing to the file (If file doesn't exist.. file will be created)
             fobj = open("customers.txt","a")  # append operation




closing the file
------------------
object.close()





























